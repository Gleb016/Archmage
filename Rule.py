
def game_beginning():
    return '**Начало игры**\n\n' \
           'В начале игры у каждого игрока есть 20 жизней.\n\n' \
            'Чтобы одержать победу, вы должны сократить количество жизней оппонента до нуля.' \
           ' Можно также победить оппонента, если он должен взять карту,' \
           ' а его колода пуста, или если заклинание или способность объявляет вас победителем.\n\n' \
            'Определите, кто из игроков будет делать первый ход.' \
           ' Если вы только что закончили предыдущую партию с этим же оппонентом,' \
           ' то проигравший решает, кто ходит первым.' \
           ' В противном случае, бросьте кубик или подкиньте монету,' \
           ' чтобы выбрать игрока, который примет это решение.\n\n' \
            'Каждый игрок тасует свою колоду и набирает руку из семи карт, чтобы начать игру.' \
           ' Если вам не понравилась ваша начальная рука, можно запросить пересдачу. ' \
           'Втасуйте карты обратно в колоду и наберите новую руку, уже из шести карт. ' \
           'Так можно поступать до тех пор, пока вас не устроят взятые карты, ' \
           'но при каждой пересдаче в новой руке должно быть на одну карту меньше.'

def starting_phase():
    return '**НАЧАЛЬНАЯ ФАЗА**\n\n' \
            '\t1.Шаг разворота\n' \
            '\t\tРазверните все ваши повернутые перманенты.' \
            ' Если это первый ход в данной партии, то \t\tперманентов у вас пока нет,' \
            ' поэтому просто пропустите этот шаг. ' \
            'Во время этого шага нельзя \t\tразыгрывать заклинания и активировать способности.\n\n' \
            '\t2.Шаг поддержки\n' \
            '\t\tЭтот этап хода часто упоминается в тексте карт. ' \
            'Если что-то должно произойти всего лишь один \t\tраз в ходу, в самом начале,' \
            ' то способность срабатывает «в начале вашего шага поддержки».' \
            ' Игроки \t\tмогут разыгрывать мгновенные заклинания и активировать способности.\n\n' \
            '\t3.Шаг взятия карты\n' \
            '\t\tВозьмите одну карту из вашей библиотеки.' \
            ' (Игрок, который ходит первым, пропускает шаг взятия \t\tкарты во время своего первого хода,' \
            ' поскольку у него и так есть преимущество.)' \
            ' Теперь игроки могут \t\tразыгрывать мгновенные заклинания и активировать способности.'
def Atack_phase():
    return '**ФАЗА БОЯ**\n\n ' \
           '1. Шаг начала боя\n\n' \
           'Игроки могут разыгрывать мгновенные заклинания и активировать способности.' \
           ' У оппонента есть последняя возможность разыграть заклинания или активировать способности,' \
           ' пресекающие атаку со стороны ваших существ\n\n.' \
           '2. Шаг объявления атакующих\n\n' \
           'Вы принимаете решение, будут ли ваши неповернутые существа атаковать,' \
           ' и если да, то какие из них, а также какого игрока или planeswalker-а они будут атаковать.' \
           ' После этого они атакуют. При этом атакующие существа поворачиваются.' \
           ' Теперь игроки могут разыгрывать мгновенные заклинания и активировать способности.\n\n ' \
           '3. Шаг объявления блокирующих\n\n ' \
           'Ваш оппонент решает, будут ли его неповернутые существа блокировать ваши атакующие существа, и если да,' \
           ' то какие из них; после этого они начинают блокировать.' \
           ' Если одного и того же атакующего блокируют несколько существ,' \
           ' то вы упорядочиваете блокирующих в той последовательности, в которой они будут получать повреждения.' \
           ' Теперь игроки могут разыгрывать мгновенные заклинания и активировать способности.\n\n' \
           '4. Шаг боевых повреждений\n\n' \
           'Каждое атакующее и блокирующее существо, все еще находящееся на поле битвы,' \
           ' наносит боевые повреждения защищающемуся игроку (если оно атакует этого игрока и не было заблокировано),' \
           ' planeswalker-у (если оно атакует этого planeswalker-а и не было заблокировано),' \
           ' одному или нескольким блокирующим его существам или же заблокированному им существу.' \
           ' Если атакующее существо заблокировано несколькими существами, вы распределяете между ними наносимые' \
           ' им боевые повреждения таким образом, чтобы на первое блокирующее существо было выделено, как минимум,' \

def global_phase():
    return '**ГЛАВНАЯ ФАЗА**\n\n' \
           'Вторая главная фаза протекает точно так же, как и первая.' \
           ' Вы можете разыгрывать любые типы заклинаний и активировать способности, а оппонент может' \
           ' разыгрывать только мгновенные заклинания и активировать способности.' \
           ' Во время этой фазы можно разыграть землю, если вы еще не сделали этого' \
           ' во время вашей первой главной фазы.\n'
def end_phase():
    return '**ЗАВЕРШАЮЩАЯ ФАЗА**\n\n' \
           '1. Заключительный шаг\n\n' \
           'Способности, срабатывающие «в начале вашего заключительного шага», отправляются в стек.' \
           ' Теперь игроки могут разыгрывать мгновенные заклинания и активировать способности.\n\n' \
           '2. Шаг очистки\n\n' \
           'Если у вас в руке больше семи карт, выберите и сбросьте лишние карты, пока не останется ровно семь.' \
           ' После этого все повреждения с существ снимаются,' \
           ' и прекращается действие всех эффектов, длящихся «до конца хода».' \
           ' Разыгрывать мгновенные заклинания или активировать способности нельзя, кроме случаев,' \
           ' когда во время этого шага срабатывают срабатывающие способности.'